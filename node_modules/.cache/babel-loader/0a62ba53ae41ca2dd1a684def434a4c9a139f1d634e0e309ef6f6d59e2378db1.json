{"ast":null,"code":"var _jsxFileName = \"/home/kishan/Incruiter/frontend/src/Screen/PasswordReset.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ForgotPassword.css\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const navigation = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const handleSubmit = async e => {\n    // e.preventDefault();\n    // console.log(\"Reset password request submitted for:\", email);\n\n    // try {\n    //   let { data } = await axios.post(`http://localhost:5500/api/v1/forgot-password`, { email });\n    //   if (data.error === false) {\n    //     alert(data.message);\n    //     navigation(\"/\");\n    //   }\n    // } catch (err) {\n    //   console.error(err);\n    //   alert(err.response.data.message);\n    // }\n  };\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Enter Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: handleEmailChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"reset-btn\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-link\",\n        children: [\"Remember your password? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"VQClcBWj1MUScPmK0i670LDBbTw=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","ForgotPassword","_s","navigation","email","setEmail","handleSubmit","e","handleEmailChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","onChange","required","href","_c","$RefreshReg$"],"sources":["/home/kishan/Incruiter/frontend/src/Screen/PasswordReset.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ForgotPassword.css\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ForgotPassword = () => {\n  const navigation = useNavigate();\n  const [email, setEmail] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    // e.preventDefault();\n    // console.log(\"Reset password request submitted for:\", email);\n\n    // try {\n    //   let { data } = await axios.post(`http://localhost:5500/api/v1/forgot-password`, { email });\n    //   if (data.error === false) {\n    //     alert(data.message);\n    //     navigation(\"/\");\n    //   }\n    // } catch (err) {\n    //   console.error(err);\n    //   alert(err.response.data.message);\n    // }\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  return (\n    <div className=\"forgot-password-container\">\n      <div className=\"forgot-password-box\">\n        <h2>Forgot Password</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-group\">\n            <label htmlFor=\"email\">Enter Your Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleEmailChange}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"reset-btn\">\n            Reset Password\n          </button>\n        </form>\n        <p className=\"login-link\">\n          Remember your password? <a href=\"/\">Login</a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAC7B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,UAAU,GAAGL,WAAW,CAAC,CAAC;EAChC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EAED,MAAMC,iBAAiB,GAAID,CAAC,IAAK;IAC/BF,QAAQ,CAACE,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxCZ,OAAA;MAAKW,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCZ,OAAA;QAAAY,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBhB,OAAA;QAAMiB,QAAQ,EAAEX,YAAa;QAAAM,QAAA,gBAC3BZ,OAAA;UAAKW,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BZ,OAAA;YAAOkB,OAAO,EAAC,OAAO;YAAAN,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/ChB,OAAA;YACEmB,IAAI,EAAC,OAAO;YACZC,EAAE,EAAC,OAAO;YACVC,IAAI,EAAC,OAAO;YACZX,KAAK,EAAEN,KAAM;YACbkB,QAAQ,EAAEd,iBAAkB;YAC5Be,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhB,OAAA;UAAQmB,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAE5C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACPhB,OAAA;QAAGW,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,0BACA,eAAAZ,OAAA;UAAGwB,IAAI,EAAC,GAAG;UAAAZ,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAlDID,cAAc;EAAA,QACCH,WAAW;AAAA;AAAA2B,EAAA,GAD1BxB,cAAc;AAoDpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}